{
  
    
        "post0": {
            "title": "Estudos de caso de Redes Complexas no Twitter - Live no Canal EstaTiDados",
            "content": ".",
            "url": "https://fmarcelneves.github.io/portfolio/lives/twitter/redes%20complexas/2021/01/26/Live-EstaTiDados.html",
            "relUrl": "/lives/twitter/redes%20complexas/2021/01/26/Live-EstaTiDados.html",
            "date": " • Jan 26, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "A Relação Entre Data Science E Sistemas complexos",
            "content": "A relação entre Data Science e Sistemas Complexos . Talvez dois dos principais problemas em Data Science sejam um número cada vez maior de dados e como extrair informações relevantes destes. Enquanto ferramentas para a extração e armazenamento de Big Data parecem cada vez mais promissoras, compreender dados que geralmente possuem alta dimensionalidade, graus de incerteza sobre suas condições iniciais e limitantes, e heterogeneidade é um desafio considerável. Tais tipos de dados muitas vezes podem ser classificados como sistemas complexos. Porém, o que seria um sistema complexo? A definição não é única, mas podemos usar a concebida pela cientista Melanie Mitchell (2009): . um sistema no qual grandes redes de componentes sem controle central, e regras simples de operação dão origem a um comportamento coletivo complexo, com sofisticado processamento de informações e adaptação por meio de aprendizagem ou evolução. . Estes sistemas podem apresentar diversas características, tais como ciclos de retroalimentação positiva e negativa, não linearidade (onde o todo é diferente do que a soma das partes), comportamento caótico, e uma distribuição não gaussiana de dados, em que resultados muito distantes da média são mais prováveis do que o esperado. . Uma grande parte dos fenômenos do mundo real podem ser considerados sistemas complexos, tais como o sistema nervoso, organismos, colônias de formigas (além da própria interação entre as formigas), organizações econômicas e sociais (e.g. cidades, sistemas financeiros), ecossistemas, sistemas de infraestrutura (e.g. energia e telecomunicações), a World Wide Web, entre outros. Sistemas em que a organização central não possui um controle ou líder interno ou externo, também são conhecidos como auto-organizados. Eles são muito difíceis de serem previstos, apesar de regras e interações simples produzirem seu comportamento, conhecido em uma escala macro (referente ao todo), como emergente. . . Um sistema pode parecer complexo, mas não ser um sistema complexo per se, apenas complicado. Problemas complicados podem ser de difícil resolução, com muito elementos interagindo entre si, mas se eles interagem de maneira linear, sua resolução correta é apenas questão de tempo e pode ser feita em blocos aditivos (Nason, 2017). O grande problema é aplicar abordagens simples para problemas complexos e que são inerentemente não-lineares, isto pode levar a conclusões errôneas e perigosas. Por exemplo, todas as variáveis relacionadas ao clima, tais como temperatura, umidade, pressão do ar, precipitação de chuva e etc, podem ser mensuradas corretamente, porém é muito difícil ter previsibilidade sobre o clima em uma escala de tempo maior do que dias. Isto ocorre porque o clima é um sistema caótico, onde uma pequena mudança nas condições iniciais de uma parte do sistema pode ter grandes consequências no sistema todo, tal fenômeno ficou conhecido na cultura popular como o “efeito borboleta”. O efeito borboleta foi nomeado desta forma devido a uma palestra feita por Edward Lorenz em uma conferência científica, entitulada “O bater das asas de uma borboleta no Brasil desencadeou um tornado no Texas?” O propósito de sua pergunta provocativa, disse ele, era ilustrar a ideia de que alguns sistemas dinâmicos complexos exibem comportamentos imprevisíveis, de modo que pequenas variações nas condições iniciais podem ter efeitos profundos e amplamente divergentes sobre os resultados do sistema. Devido à sensibilidade desses sistemas, os resultados de suas dinâmicas são imprevisíveis. Outro exemplo é o mercado financeiro, que também possui um nível de imprevisibilidade muito mais alto que outros sistemas, pode-se compreender todas as diferentes partes do sistema, mas à medida que ele evolui, elas frequentemente interagem de maneiras imprevisíveis. . Ok, é um tanto quanto evidente que o mundo real é mais complexo do que conseguimos observar, mas isso faz com que tenhamos limitações intrínsecas para o estudo da ciência de dados de certos fenômenos? Não necessariamente, pelo menos em alguns casos. Existe uma área acadêmica focada nos estudos de sistemas complexos, e suas ferramentas analíticas podem ser também utilizadas em um contexto voltado para Data Science. Estas ferramentas podem ser usadas em modelagem, para descobrir através de simulações quais padrões emergem das interações entre as variáveis. Os resultados das simulações podem gerar novos insights sobre os dados, além de criar novas variáveis e medidas que podem ser analisadas por métodos mais tradicionais. Podemos fazer um um resumo de algumas das principais abordagens utilizadas: . Teoria de redes (i.e. Teoria dos Grafos): Talvez uma das interseções mais conhecidas entre sistemas complexos e data science. Uma rede complexa é descrita como um sistema de nós (objetos) conectados por interações (links ou arestas), que se comunicam entre si, exibindo padrões de conexão que não são puramente regulares, nem puramente aleatórios (Newman 2003). Dados de redes sociais são geralmente associados com modelagem de grafos e análises de redes complexas, tais como a análise do rank de diferentes nós, coeficientes de cluster, medidas de centralidade, entre outras, além da possibilidade do uso de redes bayesianas. Além de redes sociais, relações entre elementos culturais (e.g. religiões), tecnológicos (e.g. sistemas de transporte e comunicação), financeiros (e.g. mercados financeiros, comércio internacional) e biológicos (e.g. interações entre genes e organismos, transmissão de doenças) podem ser representadas como redes complexas. . | Modelagem baseada em agentes (i.e. Agent-based models): permite a modelagem de agentes independentes que interagem entre si, e o efeito dessas interações no sistema geral. Usando regras de interação simples, é possível observar um comportamento emergente complexo que pode fornecer percepções sobre um sistema. ABMs são usados em diversas situações, por exemplo, para estudar a dinâmica de multidões, o comportamento de organismos ou animais que agem livremente, fenômenos epidemiológicos (como em estudos de previsão do contágio de Covid-19) ou para estudar e projetar espaços físicos de acordo com os fluxos de tráfego humano e logística. ABMs são inerentemente voltados para o futuro e não requerem grandes volumes de dados históricos com alta qualidade, apenas hipóteses ou conhecimento prévio de como um sistema ou seus componentes podem funcionar. . | Autômatos celulares (AC): modelos computacionais discretos baseados em grade, nos quais elementos simples (“células”) estão dispostos em uma rede regular. O estado da célula no próximo instante de tempo é determinada de acordo com o seu próprio estado atual, o das células vizinhas e de um conjunto de regras, conhecidas como regras de transições locais. Uma configuração inicial do autômato, aparentemente simples, pode produzir resultados em que a conjuntura da matemática dos estados apresentará um alto nível de complexidade (Wolfram, 1994). Aplicações de autômatos celulares em Data Science são observadas em Deep Learning. . | Métodos de Monte Carlo: uma abordagem que inclui vários algoritmos que tem em comum o uso da geração de números aleatórios para resolver problemas determinísticos. O uso da modelagem de MC é extenso, com contribuições na física, biologia, teoria de jogos, e finanças. Frequentemente aplicado para análise de risco e decisão, por exemplo, para examinar a probabilidade de perda em uma carteira de investimentos. Dentre os algoritmos de MC existentes, Monte Carlo tree search (MCTS) provou ser muito eficaz no tratamento de grandes volumes de dados para aplicações de inteligência artificial (Silver, 2016). . | . Determinar qual abordagem utilizar depende do problema que se está analisando, muitas vezes mais de um método pode ser usado devido a oferecer informações diferentes e complementares sobre o sistema estudado. Pretendo postar mais sobre dois tópicos aqui mencionados, que utilizei em meus estudos acadêmicos de sistemas complexos biológicos, redes complexas e ABMs. Em suma, talvez a grande questão é que sistemas complexos são….complexos! espera-se que não exista uma resposta fácil para como abordá-los, ainda mais em um contexto de predição. O que deve-se evitar é considerar um sistema complexo como simples ou que pode ser linearilizado, sem uma checagem aprofundada de como perturbações afetam o sistema. As consequências de uma previsão falha podem ser catastróficas. Incorporar o poder de ferramentas analíticas de sistemas complexos com inteligência artificial pode ser o melhor caminho para uma previsão mais refinada do futuro. . Bibliografia . Mitchell, M. (2009). Complexity: A guided tour. Oxford University Press. . Nason, R. (2017). It’s Not Complicated: The Art and Science of Complexity in Business. University of Toronto Press. . Newman, M. E. (2003). The structure and function of complex networks. SIAM review, 45(2), 167–256. . Silver D, Huang A, Maddison CJ, Guez A, Sifre L. Mastering the game of go with deep neural networks and tree search. Nature 2016;529:484489. . Wolfram, S. (1994). Cellular Automata and Complexity. Collected Papers. MA Reading: Addison-Wesley. 1a edition Cellular Automaton and Deep Learning Intelligent systemstowardsdatascience.com Agent-based Modeling Will Unleash a New Paradigm of Machine Learning And address some issues in data sciencetowardsdatascience.com .",
            "url": "https://fmarcelneves.github.io/portfolio/2020/10/02/A-rela%C3%A7%C3%A3o-entre-Data-Science-e-Sistemas-Complexos.html",
            "relUrl": "/2020/10/02/A-rela%C3%A7%C3%A3o-entre-Data-Science-e-Sistemas-Complexos.html",
            "date": " • Oct 2, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://fmarcelneves.github.io/portfolio/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://fmarcelneves.github.io/portfolio/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": ". Doutor em Ciências Biológicas da Universidade Federal do Paraná (UFPR) com doutorado sanduíche (bolsista CAPES-PDSE) na New Jersey Institute of Technology (NJIT), Mestre em Zoologia da Universidade Federal do Paraná (UFPR), Bacharel em Biologia pela Pontifícia Universidade Católica do Paraná. Realizei pós-doutorado e fui pesquisador associado do Instituto Oceanográfico da Universidade de São Paulo (IOUSP). . Tenho mais de 8 anos de experiência com análise de dados, dentre habilidades específicas, tenho experiência e conhecimento científico de modelagem matemática, redes complexas, análises de recorrência (dinâmica não-linear), estatística, programação (e.g. R, Python, Matlab, NetLogo), e uso de software de tracking de movimento (e.g. Ctrax, ImageJ). Tenho artigos científicos publicados em revistas internacionais como primeiro autor, com ênfase em Comportamento e Sistemas Complexos, trabalhando com seres humanos, insetos sociais (formigas &amp; vespas), aracnídeos e organismos planctônicos. . Possuo interesse em pesquisa interdisciplinar para a compreensão de fenômenos naturais, colaborando recentemente com profissionais da área da Física, e utilizando ferramentas de deep learning e redes neurais. . Atualmente fazendo transição para a área de Data Science e Analytics. Portfólio de Data Science em construção (será exposto aqui assim que possível) .",
          "url": "https://fmarcelneves.github.io/portfolio/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://fmarcelneves.github.io/portfolio/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}